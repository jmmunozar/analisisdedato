# importamos la librerias y el dataset
import pandas as pd
dataset = pd.read_csv('Mall_Customers.csv')
dataset

/*** modelo de Kmeans ***/

# importacion de libreria plt
import numpy as np
import matplotlib.pyplot as plt

 importamos Kmeans
from sklearn.cluster import KMeans

# Creaciòn de los Kmeans objetos
kmeans = KMeans(n_clusters=4)

#Granaciòn de los datos aleatorio para el clùster
np.random.seed(7)
x1 = np.random.standard_normal((100,2))*0.6+np.ones((100,2))
x2 = np.random.standard_normal((100,2))*0.5-np.ones((100,2))
x3 = np.random.standard_normal((100,2))*0.4-2*np.ones((100,2))+5
X = np.concatenate((x1,x2,x3),axis=0)

plt.plot(X[:,0],X[:,1], 'k,')
plt.show()

#Agrupacion de los puntos 
n = 3
k_means = KMeans(n_clusters=n)
k_means.fit(X)


centroides = k_means.cluster_centers_
etiquetas = k_means.labels_

# Graficamos los puntos del clùster.
plt.plot(X[etiquetas==0,0],X[etiquetas==0,1],'r.', label='punto 1')
plt.plot(X[etiquetas==1,0],X[etiquetas==1,1],'b.', label='punto 2')
plt.plot(X[etiquetas==2,0],X[etiquetas==2,1],'g.', label='punto 3')

plt.plot(centroides[:,0],centroides[:,1],'mo',markersize=8, label='centroides')

plt.legend(loc='best')
plt.show()


/**** modelo de hierarchica  ****/

# clustering Jerárquico( Jerarquia de clusters)
# importacion de librerias
# Imprimos los ingresos anuelaes y la puntacion de los gastos del cliente
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
dataset = pd.read_csv('Mall_Customers.csv')
dataset
d = dataset.iloc[:, [3,4]].values
# creamos el dandograma.
import scipy.cluster.hierarchy as sch
dendrogram = sch.dendrogram(sch.linkage(d, method = 'ward'))
plt.title('Dendograma Hierarchical Clustering')
plt.xlabel('cliente')
plt.ylabel('distancia')
plt.show()
/** Ajuste al conjunto de datos ***/
# Ajustando Clustering Jerárquico al conjunto de datos
from sklearn.cluster import AgglomerativeClustering
hc = AgglomerativeClustering(n_clusters = 5, 
                    metric = 'euclidean', 
                    linkage = 'ward')

y_hc = hc.fit_predict(d)

/*** Puntos de Predicciòn***/
# Visualising the clusters
plt.scatter(d[y_hc == 0, 0], d[y_hc == 0, 1], s = 100, c = 'red', label = 'Grupo 1')
plt.scatter(d[y_hc == 1, 0], d[y_hc == 1, 1], s = 100, c = 'blue', label = 'Grupo 2')
plt.scatter(d[y_hc == 2, 0], d[y_hc == 2, 1], s = 100, c = 'green', label = 'Grupo 3')
plt.scatter(d[y_hc == 3, 0], d[y_hc == 3, 1], s = 100, c = 'cyan', label = 'Grupo4')
plt.scatter(d[y_hc == 4, 0], d[y_hc == 4, 1], s = 100, c = 'orange', label = 'Grupo 5')
plt.title('Clientes')
plt.xlabel('Ingresos Anueles(k$)')
plt.ylabel('Puntuacion de Gastos (1-100)')
plt.legend()
plt.show()

/*** Codigo del Analisis explotario  ***/
# importamos el dataset
import pandas as pd
dataset = pd.read_csv('Mall_Customers.csv')
dataset

# Analizar la informacion del dataset.
dataset.describe()

# Cuantos registros tenemos en Annual Income(K$)
print(dataset.groupby('Annual Income (k$)').size())

# informacion del dataset.
dataset.info()

# Numero de filas y columnas del dataset

print('Cantidad de Filas y columnas:',dataset.shape)
print('Nombre columnas:',dataset.columns)

/** Preprocesar los datos **/
#Dimensiones del Dataframe utilizado.
import numpy as np
print("Numero de filas: " + str(dataset.shape[0]))
print("Numero de columnas: " + str(dataset.shape[1]),'\n')
print('Tipo de variables:','\n', dataset.dtypes)
print('Ids únicos:', len(np.unique(dataset.CustomerID)))

# Nombre de las variables orfiginales del dataset.
dataset.columns

# Renombrar el nombre de las variables.
dataset.columns = ['CustomerID', 'Gender', 'Age', 'AnnualIncome','SpendingScore']
dataset.columns

# crean la lista de las variables segun el tipo de datos
string = ['Gender']
numeric = ['Age', 'AnnualIncome', 'SpendingScore']

# Analsisi de las variables descriptivo
dataset[numeric].describe()


